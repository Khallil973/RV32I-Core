$date
	Sat Sep 07 14:01:20 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_pipeline_top $end
$var reg 1 ! BranchE $end
$var reg 1 " PCSrcE $end
$var reg 1 # ZeroE $end
$var reg 1 $ clk $end
$var reg 1 % rst $end
$scope module dut $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var wire 32 & WriteDataM [31:0] $end
$var wire 1 ' StallF $end
$var wire 1 ( StallD $end
$var wire 32 ) ResultW [31:0] $end
$var wire 1 * ResultSrcW $end
$var wire 1 + ResultSrcM $end
$var wire 1 , ResultSrcE $end
$var wire 1 - RegWriteW $end
$var wire 1 . RegWriteM $end
$var wire 1 / RegWriteE $end
$var wire 32 0 ReadDataW [31:0] $end
$var wire 5 1 RS2_E [4:0] $end
$var wire 5 2 RS2_D [4:0] $end
$var wire 5 3 RS1_E [4:0] $end
$var wire 5 4 RS1_D [4:0] $end
$var wire 5 5 RD_W [4:0] $end
$var wire 5 6 RD_M [4:0] $end
$var wire 5 7 RD_E [4:0] $end
$var wire 32 8 RD2_E [31:0] $end
$var wire 32 9 RD1_E [31:0] $end
$var wire 32 : PCTargetE [31:0] $end
$var wire 1 ; PCSrcE $end
$var wire 32 < PCPlus4W [31:0] $end
$var wire 32 = PCPlus4M [31:0] $end
$var wire 32 > PCPlus4E [31:0] $end
$var wire 32 ? PCPlus4D [31:0] $end
$var wire 32 @ PCE [31:0] $end
$var wire 32 A PCD [31:0] $end
$var wire 1 B MemWriteM $end
$var wire 1 C MemWriteE $end
$var wire 32 D InstrD [31:0] $end
$var wire 32 E Imm_Ext_E [31:0] $end
$var wire 2 F ForwardBE [1:0] $end
$var wire 2 G ForwardAE [1:0] $end
$var wire 1 H FlushE $end
$var wire 1 I FlushD $end
$var wire 1 J BranchE $end
$var wire 32 K ALU_ResultW [31:0] $end
$var wire 32 L ALU_ResultM [31:0] $end
$var wire 1 M ALUSrcE $end
$var wire 3 N ALUControlE [2:0] $end
$scope module Forwarding_block $end
$var wire 1 % rst $end
$var wire 1 - RegWriteW $end
$var wire 1 . RegWriteM $end
$var wire 5 O RS2_E [4:0] $end
$var wire 5 P RS1_E [4:0] $end
$var wire 5 Q RD_W [4:0] $end
$var wire 5 R RD_M [4:0] $end
$var wire 2 S ForwardBE [1:0] $end
$var wire 2 T ForwardAE [1:0] $end
$upscope $end
$scope module branch $end
$var wire 1 I FlushD $end
$var wire 1 H FlushE $end
$var wire 5 U RS1_D [4:0] $end
$var wire 5 V RS2_D [4:0] $end
$var wire 1 W lwStall $end
$var wire 1 , ResultSrcE $end
$var wire 5 X RD_E [4:0] $end
$var wire 1 ; PCSrcE $end
$upscope $end
$scope module decode $end
$var wire 3 Y ALUControlE [2:0] $end
$var wire 1 M ALUSrcE $end
$var wire 1 J BranchE $end
$var wire 1 H FlushE $end
$var wire 32 Z Imm_Ext_E [31:0] $end
$var wire 1 C MemWriteE $end
$var wire 32 [ PCE [31:0] $end
$var wire 32 \ PCPlus4E [31:0] $end
$var wire 32 ] RD1_E [31:0] $end
$var wire 32 ^ RD2_E [31:0] $end
$var wire 5 _ RS1_D [4:0] $end
$var wire 5 ` RS1_E [4:0] $end
$var wire 5 a RS2_D [4:0] $end
$var wire 5 b RS2_E [4:0] $end
$var wire 1 / RegWriteE $end
$var wire 1 , ResultSrcE $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var wire 32 c ResultW [31:0] $end
$var wire 1 d ResultSrcD $end
$var wire 1 - RegWriteW $end
$var wire 1 e RegWriteD $end
$var wire 5 f RD_W [4:0] $end
$var wire 5 g RD_E [4:0] $end
$var wire 32 h RD2_D [31:0] $end
$var wire 32 i RD1_D [31:0] $end
$var wire 1 j PCSrc $end
$var wire 32 k PCPlus4D [31:0] $end
$var wire 32 l PCD [31:0] $end
$var wire 1 m MemWriteD $end
$var wire 32 n InstrD [31:0] $end
$var wire 32 o Imm_Ext_D [31:0] $end
$var wire 2 p ImmSrcD [1:0] $end
$var wire 1 q BranchD $end
$var wire 1 r ALUSrcD $end
$var wire 3 s ALUControlD [2:0] $end
$var reg 3 t ALUControlD_r [2:0] $end
$var reg 1 M ALUSrcD_r $end
$var reg 1 J BranchD_r $end
$var reg 32 u Imm_Ext_D_r [31:0] $end
$var reg 1 v MemWriteD_r $end
$var reg 32 w PCD_r [31:0] $end
$var reg 32 x PCPlus4D_r [31:0] $end
$var reg 32 y RD1_D_r [31:0] $end
$var reg 32 z RD2_D_r [31:0] $end
$var reg 5 { RD_r [4:0] $end
$var reg 5 | RS1_D_r [4:0] $end
$var reg 5 } RS2_D_r [4:0] $end
$var reg 1 ~ RegWriteD_r $end
$var reg 1 , ResultSrcD_r $end
$scope module control $end
$var wire 1 !" Zero $end
$var wire 3 "" func3 [2:0] $end
$var wire 7 #" func7 [6:0] $end
$var wire 7 $" op [6:0] $end
$var wire 1 d ResultSrc $end
$var wire 1 e RegWrite $end
$var wire 1 j PCSrc $end
$var wire 1 m MemWrite $end
$var wire 2 %" ImmSrc [1:0] $end
$var wire 1 q Branch $end
$var wire 1 r ALUSrc $end
$var wire 2 &" ALUOp [1:0] $end
$var wire 3 '" ALUControl [2:0] $end
$scope module Alu $end
$var wire 3 (" func3 [2:0] $end
$var wire 7 )" func7 [6:0] $end
$var wire 7 *" op [6:0] $end
$var wire 2 +" ALUOp [1:0] $end
$var wire 3 ," ALUControl [2:0] $end
$upscope $end
$scope module main $end
$var wire 1 j PCSrc $end
$var wire 1 !" Zero $end
$var wire 7 -" op [6:0] $end
$var wire 1 d ResultSrc $end
$var wire 1 e RegWrite $end
$var wire 1 m MemWrite $end
$var wire 2 ." ImmSrc [1:0] $end
$var wire 1 q Branch $end
$var wire 1 r ALUSrc $end
$var wire 2 /" ALUOp [1:0] $end
$upscope $end
$upscope $end
$scope module register $end
$var wire 5 0" A1 [4:0] $end
$var wire 5 1" A2 [4:0] $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var wire 1 - WE3 $end
$var wire 32 2" WD3 [31:0] $end
$var wire 32 3" RD2 [31:0] $end
$var wire 32 4" RD1 [31:0] $end
$var wire 5 5" A3 [4:0] $end
$var integer 32 6" i [31:0] $end
$upscope $end
$scope module sign $end
$var wire 2 7" ImmSrc [1:0] $end
$var wire 32 8" In [31:0] $end
$var wire 32 9" Imm_Ext [31:0] $end
$upscope $end
$upscope $end
$scope module execute $end
$var wire 3 :" ALUControlE [2:0] $end
$var wire 1 M ALUSrcE $end
$var wire 1 J BranchE $end
$var wire 2 ;" ForwardAE [1:0] $end
$var wire 2 <" ForwardBE [1:0] $end
$var wire 32 =" Imm_Ext_E [31:0] $end
$var wire 1 C MemWriteE $end
$var wire 1 B MemWriteM $end
$var wire 32 >" PCE [31:0] $end
$var wire 32 ?" PCPlus4E [31:0] $end
$var wire 32 @" PCPlus4M [31:0] $end
$var wire 1 ; PCSrcE $end
$var wire 32 A" RD1_E [31:0] $end
$var wire 32 B" RD2_E [31:0] $end
$var wire 5 C" RD_E [4:0] $end
$var wire 5 D" RD_M [4:0] $end
$var wire 1 / RegWriteE $end
$var wire 1 . RegWriteM $end
$var wire 1 , ResultSrcE $end
$var wire 32 E" WriteDataM [31:0] $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var wire 1 F" ZeroE $end
$var wire 32 G" Scr_B_interim [31:0] $end
$var wire 32 H" Scr_B [31:0] $end
$var wire 32 I" Scr_A [31:0] $end
$var wire 32 J" Result_E [31:0] $end
$var wire 32 K" ResultW [31:0] $end
$var wire 1 + ResultSrcM $end
$var wire 32 L" PCTargetE [31:0] $end
$var wire 32 M" ALU_ResultM [31:0] $end
$var reg 1 B MemWriteE_r $end
$var reg 32 N" PCPlus4E_r [31:0] $end
$var reg 32 O" RD2_E_r [31:0] $end
$var reg 5 P" RD_E_r [4:0] $end
$var reg 1 . RegWriteE_r $end
$var reg 2 Q" ResultSrcE_r [1:0] $end
$var reg 32 R" Result_E_r [31:0] $end
$scope module alu $end
$var wire 3 S" ALUControl [2:0] $end
$var wire 32 T" A_and_B [31:0] $end
$var wire 32 U" A_or_B [31:0] $end
$var wire 1 V" C $end
$var wire 32 W" Result [31:0] $end
$var wire 1 X" V $end
$var wire 32 Y" not_B [31:0] $end
$var wire 32 Z" sum [31:0] $end
$var wire 32 [" slt [31:0] $end
$var wire 32 \" mux_2 [31:0] $end
$var wire 32 ]" mux_1 [31:0] $end
$var wire 1 ^" cout $end
$var wire 1 F" Zero $end
$var wire 1 _" N $end
$var wire 32 `" B [31:0] $end
$var wire 32 a" A [31:0] $end
$upscope $end
$scope module alu_src_mux $end
$var wire 32 b" b [31:0] $end
$var wire 1 M s $end
$var wire 32 c" c [31:0] $end
$var wire 32 d" a [31:0] $end
$upscope $end
$scope module branch_adder $end
$var wire 32 e" a [31:0] $end
$var wire 32 f" b [31:0] $end
$var wire 32 g" c [31:0] $end
$upscope $end
$scope module srcA $end
$var wire 32 h" a [31:0] $end
$var wire 32 i" c [31:0] $end
$var wire 2 j" s [1:0] $end
$var wire 32 k" d [31:0] $end
$var wire 32 l" b [31:0] $end
$upscope $end
$scope module srcB $end
$var wire 32 m" a [31:0] $end
$var wire 32 n" c [31:0] $end
$var wire 2 o" s [1:0] $end
$var wire 32 p" d [31:0] $end
$var wire 32 q" b [31:0] $end
$upscope $end
$upscope $end
$scope module fetch $end
$var wire 1 r" EN1 $end
$var wire 1 s" EN2 $end
$var wire 1 I FlushD $end
$var wire 1 ; PCSrcE $end
$var wire 32 t" PCTargetE [31:0] $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var wire 32 u" PC_F [31:0] $end
$var wire 32 v" PCPlus4F [31:0] $end
$var wire 32 w" PCPlus4D [31:0] $end
$var wire 32 x" PCF [31:0] $end
$var wire 32 y" PCD [31:0] $end
$var wire 32 z" InstrF [31:0] $end
$var wire 32 {" InstrD [31:0] $end
$var reg 32 |" InstrF_reg [31:0] $end
$var reg 32 }" PCF_reg [31:0] $end
$var reg 32 ~" PCPlus4F_reg [31:0] $end
$scope module PC_mux $end
$var wire 32 !# b [31:0] $end
$var wire 1 ; s $end
$var wire 32 "# c [31:0] $end
$var wire 32 ## a [31:0] $end
$upscope $end
$scope module instruction $end
$var wire 1 $# clk $end
$var wire 1 % rst $end
$var wire 32 %# RD [31:0] $end
$var wire 32 &# A [31:0] $end
$upscope $end
$scope module pc $end
$var wire 32 '# b [31:0] $end
$var wire 32 (# c [31:0] $end
$var wire 32 )# a [31:0] $end
$upscope $end
$scope module program $end
$var wire 1 r" EN $end
$var wire 32 *# PC_NEXT [31:0] $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var reg 32 +# PC [31:0] $end
$upscope $end
$upscope $end
$scope module memory $end
$var wire 32 ,# ALU_ResultM [31:0] $end
$var wire 32 -# ALU_ResultW [31:0] $end
$var wire 1 B MemWriteM $end
$var wire 32 .# PCPlus4M [31:0] $end
$var wire 32 /# PCPlus4W [31:0] $end
$var wire 5 0# RD_M [4:0] $end
$var wire 5 1# RD_W [4:0] $end
$var wire 32 2# ReadDataW [31:0] $end
$var wire 1 . RegWriteM $end
$var wire 1 - RegWriteW $end
$var wire 1 + ResultSrcM $end
$var wire 1 * ResultSrcW $end
$var wire 32 3# WriteDataM [31:0] $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var wire 32 4# ReadDataM [31:0] $end
$var reg 32 5# ALU_ResultM_r [31:0] $end
$var reg 32 6# PCPlus4M_r [31:0] $end
$var reg 5 7# RD_M_r [4:0] $end
$var reg 32 8# ReadDataM_r [31:0] $end
$var reg 1 - RegWriteM_r $end
$var reg 1 * ResultSrcM_r $end
$scope module data $end
$var wire 32 9# A [31:0] $end
$var wire 32 :# WD [31:0] $end
$var wire 1 B WE $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var wire 32 ;# RD [31:0] $end
$var integer 32 <# i [31:0] $end
$upscope $end
$upscope $end
$scope module stall $end
$var wire 1 =# PCSrcE $end
$var wire 5 ># RD_E [4:0] $end
$var wire 5 ?# RS1_D [4:0] $end
$var wire 5 @# RS2_D [4:0] $end
$var wire 1 , ResultSrcE $end
$var wire 1 ( StallD $end
$var wire 1 ' StallF $end
$var wire 1 A# lwStall $end
$upscope $end
$scope module write $end
$var wire 32 B# ALU_ResultW [31:0] $end
$var wire 32 C# PCPlus4W [31:0] $end
$var wire 32 D# ReadDataW [31:0] $end
$var wire 1 * ResultSrcW $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var wire 32 E# ResultW [31:0] $end
$scope module dut_mux $end
$var wire 32 F# a [31:0] $end
$var wire 32 G# b [31:0] $end
$var wire 1 * s $end
$var wire 32 H# c [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 H#
b0 G#
b0 F#
b0 E#
b0 D#
b0 C#
b0 B#
0A#
b0 @#
b0 ?#
b0 >#
z=#
b10000000000 <#
b0 ;#
b0 :#
b0 9#
b0 8#
b0 7#
b0 6#
b0 5#
b0 4#
b0 3#
b0 2#
b0 1#
b0 0#
b0 /#
b0 .#
b0 -#
b0 ,#
b0 +#
b100 *#
b0 )#
b100 (#
b100 '#
b0 &#
b0 %#
z$#
b100 ##
b100 "#
b0 !#
b0 ~"
b0 }"
b0 |"
b0 {"
b0 z"
b0 y"
b0 x"
b0 w"
b100 v"
b100 u"
b0 t"
1s"
1r"
b0 q"
b0 p"
b0 o"
b0 n"
b0 m"
b0 l"
b0 k"
b0 j"
b0 i"
b0 h"
b0 g"
b0 f"
b0 e"
b0 d"
b0 c"
b0 b"
b0 a"
b0 `"
0_"
0^"
b0 ]"
b0 \"
b0 ["
b0 Z"
b11111111111111111111111111111111 Y"
0X"
b0 W"
0V"
b0 U"
b0 T"
b0 S"
b0 R"
b0 Q"
b0 P"
b0 O"
b0 N"
b0 M"
b0 L"
b0 K"
b0 J"
b0 I"
b0 H"
b0 G"
1F"
b0 E"
b0 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b11111 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
z!"
0~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
0v
b0 u
b0 t
b0 s
0r
0q
b0 p
b0 o
b0 n
0m
b0 l
b0 k
0j
b0 i
b0 h
b0 g
b0 f
0e
0d
b0 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
0W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
0M
b0 L
b0 K
0J
0I
0H
b0 G
b0 F
b0 E
b0 D
0C
0B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
0;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
0/
0.
0-
0,
0+
0*
b0 )
0(
0'
b0 &
0%
1$
x#
x"
x!
$end
#50000
0$
#100000
b10100000000000010010011 z"
b10100000000000010010011 %#
b1000 u"
b1000 "#
b1000 *#
b100 ?
b100 k
b100 w"
b1000 v"
b1000 ##
b1000 (#
b100 x"
b100 &#
b100 )#
b100 +#
b100 ~"
1$
1%
#150000
0$
#200000
1e
1r
b101 o
b101 9"
b10100000000000100010011 z"
b10100000000000100010011 %#
b101 1"
b10011 $"
b10011 *"
b10011 -"
b101 2
b101 V
b101 a
b101 @#
b1100 u"
b1100 "#
b1100 *#
b1000 ?
b1000 k
b1000 w"
b100 A
b100 l
b100 y"
b10100000000000010010011 D
b10100000000000010010011 n
b10100000000000010010011 8"
b10100000000000010010011 {"
b1100 v"
b1100 ##
b1100 (#
b1000 x"
b1000 &#
b1000 )#
b1000 +#
b1000 ~"
b100 }"
b10100000000000010010011 |"
b100 >
b100 \
b100 ?"
b100 x
1$
#250000
0$
#300000
0F"
b101 J"
b101 W"
b101 \"
b101 Z"
b101 ]"
b11111111111111111111111111111010 Y"
b101 U"
b1000001000010001100011 z"
b1000001000010001100011 %#
b101 H"
b101 `"
b101 c"
b10000 u"
b10000 "#
b10000 *#
b1100 ?
b1100 k
b1100 w"
b1000 A
b1000 l
b1000 y"
b10100000000000100010011 D
b10100000000000100010011 n
b10100000000000100010011 8"
b10100000000000100010011 {"
b10000 v"
b10000 ##
b10000 (#
b1100 x"
b1100 &#
b1100 )#
b1100 +#
b100 =
b100 @"
b100 .#
b100 N"
b101 1
b101 O
b101 b
b101 }
b1000 >
b1000 \
b1000 ?"
b1000 x
b100 @
b100 [
b100 w
b100 >"
b100 e"
b1 7
b1 X
b1 g
b1 {
b1 C"
b1 >#
b1001 :
b1001 L"
b1001 g"
b1001 t"
b1001 !#
b101 E
b101 Z
b101 u
b101 ="
b101 b"
b101 f"
1M
1/
1~
b1100 ~"
b1000 }"
b10100000000000100010011 |"
1$
#350000
0$
#400000
b1 s
b1 '"
b1 ,"
0e
0r
xj
b10 p
b10 %"
b10 ."
b10 7"
b1 &"
b1 +"
b1 /"
b10 o
b10 9"
1q
b100000000000110010011 z"
b100000000000110010011 %#
b10 1"
b1 0"
b1100011 $"
b1100011 *"
b1100011 -"
b10 2
b10 V
b10 a
b10 @#
b1 4
b1 U
b1 _
b1 ?#
b10100 u"
b10100 "#
b10100 *#
b10000 ?
b10000 k
b10000 w"
b1100 A
b1100 l
b1100 y"
b1000001000010001100011 D
b1000001000010001100011 n
b1000001000010001100011 8"
b1000001000010001100011 {"
b10100 v"
b10100 ##
b10100 (#
b10000 x"
b10000 &#
b10000 )#
b10000 +#
b10000 ~"
b1100 }"
b1000001000010001100011 |"
b1100 >
b1100 \
b1100 ?"
b1100 x
b1101 :
b1101 L"
b1101 g"
b1101 t"
b1101 !#
b1000 @
b1000 [
b1000 w
b1000 >"
b1000 e"
b10 7
b10 X
b10 g
b10 {
b10 C"
b10 >#
b101 L
b101 M"
b101 R"
b101 i"
b101 n"
b101 ,#
b101 9#
b1000 =
b1000 @"
b1000 .#
b1000 N"
b1 6
b1 R
b1 D"
b1 P"
b1 0#
1.
b100 <
b100 /#
b100 C#
b100 6#
1$
#450000
0$
#500000
1H
b101 T"
1I
1;
b101 I"
b101 a"
b101 k"
b101 G"
b101 d"
b101 p"
1F"
b1 G
b1 T
b1 ;"
b1 j"
b0 s
b0 '"
b0 ,"
1V"
b0 J"
b0 W"
b0 \"
b101 h
b101 3"
1e
1r
0j
b0 p
b0 %"
b0 ."
b0 7"
b0 &"
b0 +"
b0 /"
b10 F
b10 S
b10 <"
b10 o"
1^"
b1 o
b1 9"
0q
b101000000000000110010011 z"
b101000000000000110010011 %#
b11111111111111111111111111111010 ]"
b11111111111111111111111111111010 Y"
b101 U"
b0 Z"
b1 1"
b0 0"
b10011 $"
b10011 *"
b10011 -"
b1 2
b1 V
b1 a
b1 @#
b0 4
b0 U
b0 _
b0 ?#
b1110 u"
b1110 "#
b1110 *#
b101 )
b101 c
b101 2"
b101 K"
b101 l"
b101 q"
b101 E#
b101 H#
b101 H"
b101 `"
b101 c"
b10100 ?
b10100 k
b10100 w"
b10000 A
b10000 l
b10000 y"
b100000000000110010011 D
b100000000000110010011 n
b100000000000110010011 8"
b100000000000110010011 {"
b11000 v"
b11000 ##
b11000 (#
b10100 x"
b10100 &#
b10100 )#
b10100 +#
b101 K
b101 -#
b101 5#
b101 B#
b101 F#
b1000 <
b1000 /#
b1000 C#
b1000 6#
b1 5
b1 Q
b1 f
b1 5"
b1 1#
b1 7#
1-
b1100 =
b1100 @"
b1100 .#
b1100 N"
b10 6
b10 R
b10 D"
b10 P"
b10 0#
b10 1
b10 O
b10 b
b10 }
b1 3
b1 P
b1 `
b1 |
b10000 >
b10000 \
b10000 ?"
b10000 x
b1100 @
b1100 [
b1100 w
b1100 >"
b1100 e"
b1000 7
b1000 X
b1000 g
b1000 {
b1000 C"
b1000 >#
b1110 :
b1110 L"
b1110 g"
b1110 t"
b1110 !#
b10 E
b10 Z
b10 u
b10 ="
b10 b"
b10 f"
b1 N
b1 Y
b1 t
b1 :"
b1 S"
1J
0M
0/
0~
b10100 ~"
b10000 }"
b100000000000110010011 |"
1$
#550000
0$
#600000
0X"
b11111111111111111111111111111111 Y"
b0 T"
b0 U"
b0 I"
b0 a"
b0 k"
b0 h
b0 3"
0e
0r
1F"
0_"
b0 H"
b0 `"
b0 c"
b0 G
b0 T
b0 ;"
b0 j"
b0 o
b0 9"
b0 ]"
b0 ["
b0 J"
b0 W"
b0 \"
0V"
b0 G"
b0 d"
b0 p"
b0 F
b0 S
b0 <"
b0 o"
b1000001000010001100011 z"
b1000001000010001100011 %#
b0 1"
b0 $"
b0 *"
b0 -"
b0 2
b0 V
b0 a
b0 @#
b0 Z"
0^"
0H
b0 ?
b0 k
b0 w"
b0 A
b0 l
b0 y"
b0 D
b0 n
b0 8"
b0 {"
b10010 u"
b10010 "#
b10010 *#
0I
0;
b10010 v"
b10010 ##
b10010 (#
b1110 x"
b1110 &#
b1110 )#
b1110 +#
b0 ~"
b0 }"
b0 |"
b0 1
b0 O
b0 b
b0 }
b0 3
b0 P
b0 `
b0 |
b0 >
b0 \
b0 ?"
b0 x
b0 @
b0 [
b0 w
b0 >"
b0 e"
b0 7
b0 X
b0 g
b0 {
b0 C"
b0 >#
b0 :
b0 L"
b0 g"
b0 t"
b0 !#
b0 E
b0 Z
b0 u
b0 ="
b0 b"
b0 f"
b0 N
b0 Y
b0 t
b0 :"
b0 S"
0J
b0 L
b0 M"
b0 R"
b0 i"
b0 n"
b0 ,#
b0 9#
b10000 =
b10000 @"
b10000 .#
b10000 N"
b101 &
b101 E"
b101 3#
b101 :#
b101 O"
b1000 6
b1000 R
b1000 D"
b1000 P"
b1000 0#
0.
b1100 <
b1100 /#
b1100 C#
b1100 6#
b10 5
b10 Q
b10 f
b10 5"
b10 1#
b10 7#
1$
#650000
0$
#700000
b1 s
b1 '"
b1 ,"
b101 h
b101 3"
b101 i
b101 4"
xj
b10 p
b10 %"
b10 ."
b10 7"
b1 &"
b1 +"
b1 /"
b10 o
b10 9"
1q
b100000000000110010011 z"
b100000000000110010011 %#
b10 1"
b1 0"
b1100011 $"
b1100011 *"
b1100011 -"
b10 2
b10 V
b10 a
b10 @#
b1 4
b1 U
b1 _
b1 ?#
b10110 u"
b10110 "#
b10110 *#
b0 )
b0 c
b0 2"
b0 K"
b0 l"
b0 q"
b0 E#
b0 H#
b10010 ?
b10010 k
b10010 w"
b1110 A
b1110 l
b1110 y"
b1000001000010001100011 D
b1000001000010001100011 n
b1000001000010001100011 8"
b1000001000010001100011 {"
b10110 v"
b10110 ##
b10110 (#
b10010 x"
b10010 &#
b10010 )#
b10010 +#
b0 K
b0 -#
b0 5#
b0 B#
b0 F#
b10000 <
b10000 /#
b10000 C#
b10000 6#
b1000 5
b1000 Q
b1000 f
b1000 5"
b1000 1#
b1000 7#
0-
b0 =
b0 @"
b0 .#
b0 N"
b0 &
b0 E"
b0 3#
b0 :#
b0 O"
b0 6
b0 R
b0 D"
b0 P"
b0 0#
b10010 ~"
b1110 }"
b1000001000010001100011 |"
1$
#750000
0$
#800000
b0 s
b0 '"
b0 ,"
1V"
1F"
b0 i
b0 4"
1e
1r
0j
b0 p
b0 %"
b0 ."
b0 7"
b0 &"
b0 +"
b0 /"
1^"
b0 J"
b0 W"
b0 \"
b1 o
b1 9"
0q
b11111111111111111111111111111010 Y"
b101 T"
b11111111111111111111111111111010 ]"
b101000000000000110010011 z"
b101000000000000110010011 %#
b1 1"
b0 0"
b10011 $"
b10011 *"
b10011 -"
b1 2
b1 V
b1 a
b1 @#
b0 4
b0 U
b0 _
b0 ?#
b101 H"
b101 `"
b101 c"
b101 U"
b0 Z"
1H
b10000 u"
b10000 "#
b10000 *#
b10110 ?
b10110 k
b10110 w"
b10010 A
b10010 l
b10010 y"
b100000000000110010011 D
b100000000000110010011 n
b100000000000110010011 8"
b100000000000110010011 {"
b101 G"
b101 d"
b101 p"
b101 I"
b101 a"
b101 k"
1I
1;
b11010 v"
b11010 ##
b11010 (#
b10110 x"
b10110 &#
b10110 )#
b10110 +#
b10110 ~"
b10010 }"
b100000000000110010011 |"
b10 1
b10 O
b10 b
b10 }
b1 3
b1 P
b1 `
b1 |
b10010 >
b10010 \
b10010 ?"
b10010 x
b1110 @
b1110 [
b1110 w
b1110 >"
b1110 e"
b1000 7
b1000 X
b1000 g
b1000 {
b1000 C"
b1000 >#
b10000 :
b10000 L"
b10000 g"
b10000 t"
b10000 !#
b10 E
b10 Z
b10 u
b10 ="
b10 b"
b10 f"
b101 8
b101 ^
b101 z
b101 B"
b101 m"
b101 9
b101 ]
b101 y
b101 A"
b101 h"
b1 N
b1 Y
b1 t
b1 :"
b1 S"
1J
b0 <
b0 /#
b0 C#
b0 6#
b0 5
b0 Q
b0 f
b0 5"
b0 1#
b0 7#
1$
#850000
0$
#900000
0X"
1F"
0_"
b0 h
b0 3"
0e
0r
b11111111111111111111111111111111 Y"
b0 U"
b0 ]"
b0 ["
b0 J"
b0 W"
b0 \"
0V"
b0 o
b0 9"
b100000000000110010011 z"
b100000000000110010011 %#
b0 H"
b0 `"
b0 c"
b0 T"
b0 Z"
0^"
0H
b0 1"
b0 $"
b0 *"
b0 -"
b0 2
b0 V
b0 a
b0 @#
b10100 u"
b10100 "#
b10100 *#
b0 G"
b0 d"
b0 p"
b0 I"
b0 a"
b0 k"
0I
0;
b0 ?
b0 k
b0 w"
b0 A
b0 l
b0 y"
b0 D
b0 n
b0 8"
b0 {"
b10100 v"
b10100 ##
b10100 (#
b10000 x"
b10000 &#
b10000 )#
b10000 +#
b10010 =
b10010 @"
b10010 .#
b10010 N"
b101 &
b101 E"
b101 3#
b101 :#
b101 O"
b1000 6
b1000 R
b1000 D"
b1000 P"
b1000 0#
b0 1
b0 O
b0 b
b0 }
b0 3
b0 P
b0 `
b0 |
b0 >
b0 \
b0 ?"
b0 x
b0 @
b0 [
b0 w
b0 >"
b0 e"
b0 7
b0 X
b0 g
b0 {
b0 C"
b0 >#
b0 :
b0 L"
b0 g"
b0 t"
b0 !#
b0 E
b0 Z
b0 u
b0 ="
b0 b"
b0 f"
b0 8
b0 ^
b0 z
b0 B"
b0 m"
b0 9
b0 ]
b0 y
b0 A"
b0 h"
b0 N
b0 Y
b0 t
b0 :"
b0 S"
0J
b0 ~"
b0 }"
b0 |"
1$
#950000
0$
#1000000
b101 h
b101 3"
1e
1r
b1 o
b1 9"
b101000000000000110010011 z"
b101000000000000110010011 %#
b1 1"
b10011 $"
b10011 *"
b10011 -"
b1 2
b1 V
b1 a
b1 @#
b11000 u"
b11000 "#
b11000 *#
b10100 ?
b10100 k
b10100 w"
b10000 A
b10000 l
b10000 y"
b100000000000110010011 D
b100000000000110010011 n
b100000000000110010011 8"
b100000000000110010011 {"
b11000 v"
b11000 ##
b11000 (#
b10100 x"
b10100 &#
b10100 )#
b10100 +#
b10100 ~"
b10000 }"
b100000000000110010011 |"
b0 =
b0 @"
b0 .#
b0 N"
b0 &
b0 E"
b0 3#
b0 :#
b0 O"
b0 6
b0 R
b0 D"
b0 P"
b0 0#
b10010 <
b10010 /#
b10010 C#
b10010 6#
b1000 5
b1000 Q
b1000 f
b1000 5"
b1000 1#
b1000 7#
1$
#1050000
0$
#1100000
0F"
b1 J"
b1 W"
b1 \"
b1 Z"
b0 h
b0 3"
b1 ]"
b11111111111111111111111111111110 Y"
b1 U"
b1010 o
b1010 9"
bx z"
bx %#
b1 H"
b1 `"
b1 c"
b1010 1"
b1010 2
b1010 V
b1010 a
b1010 @#
b11100 u"
b11100 "#
b11100 *#
b101 G"
b101 d"
b101 p"
b11000 ?
b11000 k
b11000 w"
b10100 A
b10100 l
b10100 y"
b101000000000000110010011 D
b101000000000000110010011 n
b101000000000000110010011 8"
b101000000000000110010011 {"
b11100 v"
b11100 ##
b11100 (#
b11000 x"
b11000 &#
b11000 )#
b11000 +#
b0 <
b0 /#
b0 C#
b0 6#
b0 5
b0 Q
b0 f
b0 5"
b0 1#
b0 7#
b1 1
b1 O
b1 b
b1 }
b10100 >
b10100 \
b10100 ?"
b10100 x
b10000 @
b10000 [
b10000 w
b10000 >"
b10000 e"
b11 7
b11 X
b11 g
b11 {
b11 C"
b11 >#
b10001 :
b10001 L"
b10001 g"
b10001 t"
b10001 !#
b1 E
b1 Z
b1 u
b1 ="
b1 b"
b1 f"
b101 8
b101 ^
b101 z
b101 B"
b101 m"
1M
1/
1~
b11000 ~"
b10100 }"
b101000000000000110010011 |"
1$
#1150000
0$
#1200000
bx s
bx '"
bx ,"
bx h
bx 3"
bx i
bx 4"
xe
xr
xj
b1010 J"
b1010 W"
b1010 \"
bx o
bx 9"
xm
xd
xq
bx p
bx %"
bx ."
bx 7"
bx &"
bx +"
bx /"
b1010 Z"
bx 1"
bx 0"
bx #"
bx )"
bx ""
bx ("
bx $"
bx *"
bx -"
bx 2
bx V
bx a
bx @#
bx 4
bx U
bx _
bx ?#
b1010 ]"
b11111111111111111111111111110101 Y"
b1010 U"
b100000 u"
b100000 "#
b100000 *#
b11100 ?
b11100 k
b11100 w"
b11000 A
b11000 l
b11000 y"
bx D
bx n
bx 8"
bx {"
b1010 H"
b1010 `"
b1010 c"
b0 G"
b0 d"
b0 p"
b100000 v"
b100000 ##
b100000 (#
b11100 x"
b11100 &#
b11100 )#
b11100 +#
b11100 ~"
b11000 }"
bx |"
b1010 1
b1010 O
b1010 b
b1010 }
b11000 >
b11000 \
b11000 ?"
b11000 x
b10100 @
b10100 [
b10100 w
b10100 >"
b10100 e"
b11110 :
b11110 L"
b11110 g"
b11110 t"
b11110 !#
b1010 E
b1010 Z
b1010 u
b1010 ="
b1010 b"
b1010 f"
b0 8
b0 ^
b0 z
b0 B"
b0 m"
b1 L
b1 M"
b1 R"
b1 i"
b1 n"
b1 ,#
b1 9#
b10100 =
b10100 @"
b10100 .#
b10100 N"
b101 &
b101 E"
b101 3#
b101 :#
b101 O"
b11 6
b11 R
b11 D"
b11 P"
b11 0#
1.
1$
#1250000
0$
#1300000
xX"
x_"
bx F
bx S
bx <"
bx o"
bx G
bx T
bx ;"
bx j"
b0x ["
xI
x;
xV"
bx ]"
bx Y"
bx T"
bx U"
bx Z"
x^"
xF"
xr"
xs"
xH
bx u"
bx "#
bx *#
b1 )
b1 c
b1 2"
b1 K"
b1 l"
b1 q"
b1 E#
b1 H#
bx H"
bx `"
bx c"
bx G"
bx d"
bx p"
bx I"
bx a"
bx k"
bx J"
bx W"
bx \"
x'
x(
xA#
xW
b100000 ?
b100000 k
b100000 w"
b11100 A
b11100 l
b11100 y"
b100100 v"
b100100 ##
b100100 (#
b100000 x"
b100000 &#
b100000 )#
b100000 +#
b1 K
b1 -#
b1 5#
b1 B#
b1 F#
b10100 <
b10100 /#
b10100 C#
b10100 6#
b11 5
b11 Q
b11 f
b11 5"
b11 1#
b11 7#
1-
b1010 L
b1010 M"
b1010 R"
b1010 i"
b1010 n"
b1010 ,#
b1010 9#
b11000 =
b11000 @"
b11000 .#
b11000 N"
b0 &
b0 E"
b0 3#
b0 :#
b0 O"
bx 1
bx O
bx b
bx }
bx 3
bx P
bx `
bx |
b11100 >
b11100 \
b11100 ?"
b11100 x
b11000 @
b11000 [
b11000 w
b11000 >"
b11000 e"
bx 7
bx X
bx g
bx {
bx C"
bx >#
bx :
bx L"
bx g"
bx t"
bx !#
bx E
bx Z
bx u
bx ="
bx b"
bx f"
bx 8
bx ^
bx z
bx B"
bx m"
bx 9
bx ]
bx y
bx A"
bx h"
bx N
bx Y
bx t
bx :"
bx S"
xJ
xM
x,
xC
xv
x/
x~
b100000 ~"
b11100 }"
1$
#1350000
0$
#1400000
bx 4#
bx ;#
x+
b1010 )
b1010 c
b1010 2"
b1010 K"
b1010 l"
b1010 q"
b1010 E#
b1010 H#
b100000 >
b100000 \
b100000 ?"
b100000 x
b11100 @
b11100 [
b11100 w
b11100 >"
b11100 e"
bx L
bx M"
bx R"
bx i"
bx n"
bx ,#
bx 9#
b11100 =
b11100 @"
b11100 .#
b11100 N"
bx &
bx E"
bx 3#
bx :#
bx O"
bx 6
bx R
bx D"
bx P"
bx 0#
b0x Q"
xB
x.
b1010 K
b1010 -#
b1010 5#
b1010 B#
b1010 F#
b11000 <
b11000 /#
b11000 C#
b11000 6#
1$
#1450000
0$
#1500000
bx )
bx c
bx 2"
bx K"
bx l"
bx q"
bx E#
bx H#
bx 0
bx 2#
bx 8#
bx D#
bx G#
bx K
bx -#
bx 5#
bx B#
bx F#
b11100 <
b11100 /#
b11100 C#
b11100 6#
bx 5
bx Q
bx f
bx 5"
bx 1#
bx 7#
x*
x-
b100000 =
b100000 @"
b100000 .#
b100000 N"
1$
#1550000
0$
#1600000
b100000 <
b100000 /#
b100000 C#
b100000 6#
1$
#1650000
0$
#1700000
1$
#1750000
0$
#1800000
1$
#1850000
0$
#1900000
1$
#1950000
0$
#2000000
1$
#2050000
0$
#2100000
1$
0#
0!
0"
